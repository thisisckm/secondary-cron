- name: Deploy Secondary Cron UK V1 Update
  hosts: cam_eu_1
  remote_user: ubuntu

  tasks:
    - name: Prerequisite 1 - Create Directories
      file: path={{ item.path }} state=directory owner=ubuntu group=users mode=0755
      become: true
      with_items:
        - { path: '/home/ubuntu/secondary-cron-uk-v1/' }
        - { path: '/home/ubuntu/secondary-cron-uk-v1/logs' }
        - { path: '/home/ubuntu/secondary-cron-uk-v1/data' }
      
      
    - name: Prerequisite - Copy required files
      become: true
      copy: src={{ item.src }} dest={{ item.dest  }} owner=ubuntu group=ubuntu mode=0644
      with_items:
        - { src: './docker-compose.yml', dest: '/home/ubuntu/secondary-cron-uk-v1' }
        - { src: './.env', dest: '/home/ubuntu/secondary-cron-uk-v1' }

    
    - name: ecr docker get-authorization-token
      shell: "aws ecr get-authorization-token  --profile default --region eu-west-2"
      register: ecr_command
  
    - set_fact:
        ecr_authorization_data: "{{ (ecr_command.stdout | from_json).authorizationData[0] }}"
  
    - set_fact:
        ecr_credentials: "{{ (ecr_authorization_data.authorizationToken | b64decode).split(':') }}"
  
    - name: docker_repository - Log into ECR registry and force re-authorization
      docker_login:
        registry_url: "{{ ecr_authorization_data.proxyEndpoint.rpartition('//')[2] }}"
        username: "{{ ecr_credentials[0] }}"
        password: "{{ ecr_credentials[1] }}"
        reauthorize: yes
    - name: Lunch the container
      shell: "docker-compose stop && docker-compose pull && docker-compose up -d"
      args:
        chdir: /home/ubuntu/secondary-cron-uk-v1